{
	"name": "MediaModeration",
	"version": "2.0.0",
	"author": [
		"Core Platform & Trust and Safety Teams",
		"Trust and Safety Product Team"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:MediaModeration",
	"descriptionmsg": "mediamoderation-desc",
	"license-name": "GPL-2.0-or-later",
	"type": "other",
	"requires": {
		"MediaWiki": ">= 1.45"
	},
	"AutoloadClasses": {
		"MediaWiki\\Extension\\MediaModeration\\Maintenance\\ImportExistingFilesToScanTable": "maintenance/importExistingFilesToScanTable.php",
		"MediaWiki\\Extension\\MediaModeration\\Maintenance\\UpdateMetrics": "maintenance/updateMetrics.php",
		"MediaWiki\\Extension\\MediaModeration\\Maintenance\\ResendMatchEmails": "maintenance/resendMatchEmails.php",
		"MediaWiki\\Extension\\MediaModeration\\Maintenance\\DebugPhotoDNA": "maintenance/debugPhotoDNA.php",
		"MediaWiki\\Extension\\MediaModeration\\Maintenance\\ScanFilesInScanTable": "maintenance/scanFilesInScanTable.php"
	},
	"AutoloadNamespaces": {
		"MediaWiki\\Extension\\MediaModeration\\": "src/"
	},
	"TestAutoloadClasses": {
		"MediaWiki\\Extension\\MediaModeration\\Tests\\Integration\\Services\\MediaModerationStatsFactoryHelperTestTrait": "tests/phpunit/integration/Services/MediaModerationStatsFactoryHelperTestTrait.php",
		"MediaWiki\\Extension\\MediaModeration\\Tests\\Integration\\InsertMockFileDataTrait": "tests/phpunit/integration/InsertMockFileDataTrait.php"
	},
	"Hooks": {
		"UploadComplete": "UploadCompleteHandler",
		"LoadExtensionSchemaUpdates": "SchemaChangesHandler"
	},
	"HookHandlers": {
		"UploadCompleteHandler": {
			"class": "MediaWiki\\Extension\\MediaModeration\\Hooks\\Handlers\\UploadCompleteHandler",
			"services": [
				"MediaModerationFileProcessor",
				"MediaModerationDatabaseLookup",
				"MediaModerationEmailer",
				"MainConfig"
			]
		},
		"SchemaChangesHandler": {
			"class": "MediaWiki\\Extension\\MediaModeration\\Hooks\\Handlers\\SchemaChangesHandler"
		}
	},
	"JobClasses": {
		"mediaModerationScanFileJob": {
			"class": "MediaWiki\\Extension\\MediaModeration\\Job\\MediaModerationScanFileJob",
			"services": [
				"MediaModerationFileScanner"
			],
			"needsPage": false
		}
	},
	"ServiceWiringFiles": [
		"src/ServiceWiring.php"
	],
	"MessagesDirs": {
		"MediaModeration": [
			"i18n"
		]
	},
	"ConfigRegistry": {
		"MediaModeration": "GlobalVarConfig::newInstance"
	},
	"config": {
		"MediaModerationDeveloperMode": {
			"value": true,
			"description": "If the extension is in developer mode. Make sure this is false in production."
		},
		"MediaModerationAddToScanTableOnUpload": {
			"value": true,
			"description": "If MediaModeration will add to the mediamoderation_scan table on upload. Useful to set to false when bulk adding files in local environment."
		},
		"MediaModerationPhotoDNAMockServiceFiles": {
			"value": {
				"FilesToIsMatchMap": [],
				"FilesToStatusCodeMap": []
			},
			"description": "For CI and development setups. Two arrays of files names, FilesToIsMatchMap should contain a list of file names that the mock service says are a match to PhotoDNA's database; FilesToStatusCodeMap should contain a list of files mapped to PhotoDNA status codes. Files not in these maps will return STATUS_OK and IsMatch=false."
		},
		"MediaModerationPhotoDNAUrl": {
			"value": "https://api.microsoftmoderator.com/photodna/v1.0/Match",
			"description": "URL to PhotoDNA service endpoint."
		},
		"MediaModerationThumbnailWidth": {
			"value": 330,
			"description": "Width, in pixels, that MediaModeration will prefer to use when transforming files to a thumbnail to send to PhotoDNA. Default is 330, which is listed in $wgThumbnailSteps on WMF production wikis. A different width may be chosen if the thumbnail width would result in a height that is less than $wgMediaModerationThumbnailMinimumSize['height']."
		},
		"MediaModerationThumbnailMinimumSize": {
			"value": {
				"height": 160,
				"width": 160
			},
			"description": "Minimum width and height that thumbnails need to be to used over the source image. Dictionary with a 'height' and 'width' key which should be integers."
		},
		"MediaModerationThumborRequestTimeout": {
			"value": 60,
			"description": "Timeout for HTTP requests to the Thumbor service, in seconds."
		},
		"MediaModerationPhotoDNASubscriptionKey": {
			"value": "",
			"description": "Key for access to PhotoDNA service endpoint."
		},
		"MediaModerationRecipientList": {
			"value": [],
			"description": "List of emails to be notified when suspicious content is detected."
		},
		"MediaModerationFrom": {
			"value": "",
			"description": "Email from which notification are sent."
		},
		"MediaModerationHttpProxy": {
			"value": null,
			"description": "HTTP proxy to use when calling PhotoDNA service."
		}
	},
	"DatabaseVirtualDomains": [
		"virtual-mediamoderation"
	],
	"manifest_version": 2
}
