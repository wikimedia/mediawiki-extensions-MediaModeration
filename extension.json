{
	"name": "MediaModeration",
	"version": "0.1.0",
	"author": [
		"Core Platform & Trust and Safety Teams"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:MediaModeration",
	"descriptionmsg": "mediamoderation-desc",
	"license-name": "GPL-2.0-or-later",
	"type": "other",
	"requires": {
		"MediaWiki": ">= 1.35"
	},
	"AutoloadNamespaces": {
		"MediaWiki\\Extension\\MediaModeration\\": "src/"
	},
	"TestAutoloadClasses": {
		"MediaWiki\\Extension\\MediaModeration\\MocksHelperTrait": "tests/phpunit/MocksHelperTrait.php"
	},
	"Hooks": {
		"UploadComplete": "MediaWiki\\Extension\\MediaModeration\\Hooks::onUploadComplete"
	},
	"JobClasses": {
		"processMediaModeration": "MediaWiki\\Extension\\MediaModeration\\Job\\ProcessMediaModerationJob",
		"processMediaModerationPrioritized": "MediaWiki\\Extension\\MediaModeration\\Job\\ProcessMediaModerationJob"
	},
	"ServiceWiringFiles": [
		"src/ServiceWiring.php"
	],
	"MessagesDirs": {
		"MediaModeration": [
			"i18n"
		]
	},
	"ConfigRegistry": {
		"MediaModeration": "GlobalVarConfig::newInstance"
	},
	"config": {
		"MediaModerationCheckOnUpload": {
			"value": false,
			"description": "Should files be checked on upload."
		},
		"MediaModerationPhotoDNAUrl": {
			"value": "https://api.microsoftmoderator.com/photodna/v1.0/Match",
			"description": "URL to PhotoDNA service endpoint."
		},
		"MediaModerationSendThumbnails": {
			"value": true,
			"description": "Whether photo should be thumbnailed before sending it to PhotoDNA."
		},
		"MediaModerationThumbnailSize": {
			"value": {
				"width": 160,
				"height": 160
			},
			"description": "The width and height of the thumbnail."
		},
		"MediaModerationPhotoDNASubscriptionKey": {
			"value": "",
			"description": "Key for access to PhotoDNA service endpoint."
		},
		"MediaModerationRecipientList": {
			"value": [],
			"description": "List of emails to be notified when suspicious content is detected."
		},
		"MediaModerationFrom": {
			"value": "",
			"description": "Email from which notification are sent."
		},
		"MediaModerationHttpProxy": {
			"value": null,
			"description": "HTTP proxy to use when calling PhotoDNA service."
		}
	},
	"manifest_version": 2
}
